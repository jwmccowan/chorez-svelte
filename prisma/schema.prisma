// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  // id, session, and Key are all mandatory from lucia
  id      String    @id @unique
  session Session[]
  Key     Key[]

  // The following are not needed by lucia, but can be added in the...
  // lucia auth client if you want them attached to the requests
  // Don't forget to add them to the `auth.d.ts` if you want it in session
  name   String?
  chores Chore[]

  @@map("user")
}

// Do not edit - managed by lucia-auth
model Session {
  id             String @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("session")
}

// Do not edit - managed by lucia-auth
model Key {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  primary         Boolean
  user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("key")
}

model Chore {
  id          String   @id @default(uuid())
  title       String   @map("chore_title") @db.VarChar(50)
  description String   @map("chore_description") @db.VarChar(300)
  due         DateTime @map("due_date") @db.Date()

  userId    String @map("created_by")
  createdBy User   @relation(references: [id], fields: [userId], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@index([userId])
  @@map("chore")
}
